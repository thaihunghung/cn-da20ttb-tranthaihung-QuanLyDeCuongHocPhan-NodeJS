<script>
    var autocompleteString = '{{{autocomplete}}}'; // Chuỗi ban đầu, có thể là rỗng
    var all_autocomplete;

    if (autocompleteString.trim() === '') {
        // Nếu chuỗi rỗng, gán mảng mặc định
        all_autocomplete = [
            'học phần', 'giúp', 'trang bị', 'cho', 'sinh viên', 'các', 'kiến thức', 'cơ bản',
            'xác suất', 'và', 'thống kê', 'để', 'phân tích', 'dữ liệu', 'nghiên cứu', 'trong'
        ];
    } else {
        // Ngược lại, chuyển đổi chuỗi thành mảng
        all_autocomplete = autocompleteString.split(',');
    }

    if (Array.isArray(all_autocomplete)) {
        console.log("all_autocomplete is an array.");
    } else {
        console.log("all_autocomplete is not an array.");
    }


    function handleKeyPress(currentID, event) {
        const huntranDiv = document.getElementById(currentID);
        var selection = window.getSelection();
        var textAfterCursor;
        if (selection.rangeCount > 0) {
            var range = selection.getRangeAt(0);
            // Lấy vị trí của con trỏ
            var cursorPosition = range.startOffset;
            // Lấy văn bản phía sau
            textAfterCursor = range.startContainer.textContent.slice(cursorPosition);
        }

        if (document.activeElement === huntranDiv) {
            if (event.key === ' ') {
                var huntran = document.getElementById(currentID);
                //console.log(textBeforeCursor)
                // Tạo một phạm vi từ vị trí con trỏ
                var newRange = document.createRange();
                newRange.setStart(range.startContainer, cursorPosition);
                newRange.setEnd(range.startContainer, cursorPosition);

                // Tạo một đối tượng div để chứa cấu trúc HTML mới
                var newContent = document.createElement('div');
                newContent.className = 'Autocomplete';
                newContent.innerHTML = '<span contenteditable="true" id="textdiv"></span>';

                newRange.insertNode(newContent);
                var textDiv = document.getElementById('textdiv');

                textDiv.focus();
                // Xử lý tiếp theo nếu cần
                Autocomplete(textDiv, all_autocomplete, document.getElementById(currentID));
                huntranDiv.contentEditable = false;
                FocusToEnd(textDiv);
                textDiv.addEventListener('blur', function () {
                    huntranDiv.contentEditable = true;
                });
            } else if (event.key === 'Tab') {
                event.preventDefault();
                var huntran = document.getElementById(currentID);
                //console.log(textBeforeCursor)
                // Tạo một phạm vi từ vị trí con trỏ
                var newRange = document.createRange();
                newRange.setStart(range.startContainer, cursorPosition);
                newRange.setEnd(range.startContainer, cursorPosition);
                var newContent = document.createElement('span');


                newContent.innerHTML = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';
                newRange.insertNode(newContent);

                FocusToEnd(newContent);
            }
        }

    }
    // In mảng ra console để kiểm tra
    function Autocomplete(inp, arr, id) {
        var foundSuggestion = false;
        var currentInputValue;

        inp.addEventListener("input", function (e) {
            var a, b, i, val = this.textContent.trim();

            closeAllLists();
            if (!val) {
                return false;
            }
            currentInputValue = val;
            currentFocus = -1;
            a = document.createElement("DIV");
            a.setAttribute("class", "autocomplete-items");
            this.parentNode.appendChild(a);
            // Biến cờ để theo dõi có tìm thấy gợi ý khớp hay không
            for (i = 0; i < arr.length; i++) {
                if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                    b = document.createElement("DIV");
                    b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                    b.innerHTML += arr[i].substr(val.length);
                    b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                    b.addEventListener("click", function (e) {

                        var value = ' ' + this.getElementsByTagName("input")[0].value;
                        var childrenDiv = document.querySelector('.Autocomplete');
                        if (childrenDiv) {
                            var range = document.createRange();
                            range.selectNode(childrenDiv);
                            removeAutocompleteContainer();
                            var newSpan = document.createElement('span');
                            newSpan.textContent = value;
                            range.insertNode(newSpan);
                            FocusToEnd(newSpan);
                        }

                        id.contentEditable = true;
                        foundSuggestion = true;
                        closeAllLists();
                    });
                    a.appendChild(b);
                }
            }
        });

        inp.addEventListener("keydown", function (e) {
            var x = document.getElementsByClassName("autocomplete-items");
            if (x.length > 0) {
                x = x[0].getElementsByTagName("div");

                if (e.keyCode == 40) {
                    currentFocus++;
                    addActive(x);
                } else if (e.keyCode == 38) {
                    currentFocus--;
                    addActive(x);
                } else if (e.keyCode == 13) {
                    e.preventDefault();
                    if (currentFocus > -1) {
                        if (x) x[currentFocus].click();
                        //removeAutocompleteContainer();
                    }
                }
            }

            //còn thiếu xử lý với enter
            /////////////////////////////
            if (e.keyCode == 32 && !foundSuggestion) {
                var childrenDiv = document.querySelector('.Autocomplete');
                if (currentInputValue) {
                    value = ' ' + currentInputValue;
                    if (childrenDiv) {
                        var range = document.createRange();
                        range.selectNode(childrenDiv);
                        removeAutocompleteContainer();
                        var newSpan = document.createElement('span');
                        newSpan.textContent = value;
                        range.insertNode(newSpan);
                        FocusToEnd(newSpan);
                        id.contentEditable = true;
                    }
                } else {
                    if (childrenDiv) {
                        var range = document.createRange();
                        range.selectNode(childrenDiv);
                        removeAutocompleteContainer()
                        var newSpan = document.createElement('span');
                        newSpan.innerHTML = '&nbsp;';
                        range.insertNode(newSpan);
                        FocusToEnd(newSpan);
                    }
                    id.contentEditable = true;
                }

                removeAutocompleteContainer()
            } else if (e.keyCode == 8) {
                const childrenDiv = document.querySelector('.Autocomplete');
                if (childrenDiv) {
                    if (childrenDiv.textContent.trim() === '') {
                        var range = document.createRange();
                        range.selectNode(childrenDiv);
                        removeAutocompleteContainer();
                        var newSpan = document.createElement('span');
                        newSpan.innerHTML = '&nbsp;';
                        range.insertNode(newSpan);
                        FocusToEnd(newSpan);
                        id.contentEditable = true;
                    }
                }
            } else if (e.keyCode === 13 && !foundSuggestion) {
                e.preventDefault();
                var childrenDiv = document.querySelector('.Autocomplete');
                if (childrenDiv) {
                    var range = document.createRange();
                    range.selectNode(childrenDiv);
                    removeAutocompleteContainer()
                    var newSpan = document.createElement('br');

                    range.insertNode(newSpan);
                    FocusToEnd(newSpan);
                }
            }
        })
        function removeAutocompleteContainer() {
            var autocompleteContainer = document.querySelector('.Autocomplete');

            if (autocompleteContainer) {
                autocompleteContainer.remove();
            }
        }
        function addActive(x) {
            if (!x) return false;
            removeActive(x);
            if (currentFocus >= x.length) currentFocus = 0;
            if (currentFocus < 0) currentFocus = (x.length - 1);
            x[currentFocus].classList.add("autocomplete-active");
        }

        function removeActive(x) {
            for (var i = 0; i < x.length; i++) {
                x[i].classList.remove("autocomplete-active");
            }
        }

        function closeAllLists(elmnt) {
            var x = document.getElementsByClassName("autocomplete-items");
            for (var i = 0; i < x.length; i++) {
                if (elmnt != x[i] && elmnt != inp) {
                    x[i].parentNode.removeChild(x[i]);
                }
            }

        }
        document.addEventListener("click", function (e) {
            var childrenDiv = document.querySelector('.Autocomplete');
            if (childrenDiv) {
                if (childrenDiv.textContent === '') {
                    var range = document.createRange();
                    range.selectNode(childrenDiv);
                    removeAutocompleteContainer()
                    var newSpan = document.createElement('span');
                    newSpan.innerHTML = '&nbsp;';
                    range.insertNode(newSpan);
                } else {
                    var range = document.createRange();
                    range.selectNode(childrenDiv);
                    removeAutocompleteContainer()
                    var newSpan = document.createElement('span');
                    newSpan.innerHTML = childrenDiv.textContent;
                    range.insertNode(newSpan);
                }
            }
            closeAllLists(e.target);

        });
        function FocusToEnd(element) {
            var range = document.createRange();
            var selection = window.getSelection();
            range.selectNodeContents(element);
            range.collapse(false);
            selection.removeAllRanges();
            selection.addRange(range);
        }

    }
    function FocusToEnd(element) {
        var range = document.createRange();
        var selection = window.getSelection();
        range.selectNodeContents(element);
        range.collapse(false);
        selection.removeAllRanges();
        selection.addRange(range);
    }
</script>